NBC BILLS PAYMENTS API DOCUMENT
Version	v1.0.4
Owner	In-House Development Team

Description	This is a document describing how third parties could integrate with NBC Bills Payments Engine, all APIs in this document are RESTful, and all requests and responses to/from BILLS PAYMENTS Engine are in Json format.
Purpose	This document act as integration guide to NBC’s Bills Payments Engine. It can be consumed by Developers and Software Analysts

Consultations	All questions or comments regarding this document should be forwarded to InhouseDevelopments@nbc.co.tz copying Wilbard.Shirima@nbc.co.tz; Dustan.Mbaga@nbc.co.tz; Alex.Nyerembe@nbc.co.tz;

Version History:
Version	Date	Description of changes/updates
v1.0.0	April 10, 2025	Initial Draft
v1.0.0	April 20, 2025	Review

KEY POINTS TO NOTE.
-	Biller/Partner will need to share Base Endpoints for UAT and PROD
-	All requests to “Bills Payments API” will be through HTTPS.
-	Authentication method to be used will be JWT/Oauth2 Authentication For additionality security digital signature will be used.
PROD credentials should be shared after successfully completing SIT and UAT Sign-off.
-	SP Code value on Payment Request should come from SP Code value returned on Inquiry Response
-	All integrations must be done using VPN tunnel


GENERIC BILLS PAYMENTS IMPLEMENTATION:
The Bills Payments API is designed to provide a flexible and customizable gateway that can be easily consumed by various partners. To achieve this, the engine exposes a set of generic services that are intended to be integrated with APIs that will be implemented by the partner for a list of specified generic services.

NBC will be responsible for handling accounting as well as notifying billers/partners and customers.

Biller will be responsible for issuing payment invoices/reference, and service after payment confirmation from NBC.

As a Partner developer, you need to:
1.	Implement and Expose Inquiry API
2.	Implement and Expose Payment Notification API
3.	Implement and Expose Status Check API
Below are the expected steps once Development is done on partner/biller side:
1.	VPN Connectivity must be established with NBC
2.	Biller onboarding shall be done on the generic biller gateway
3.	SIT should be done once biller/partner is onboarded.
 
4.	Biller/Partner to provide test reference numbers for SIT for both positive and negative scenarios.
5.	Collection will only be done from NBC Channels.
6.	Security assessment shall be done by NBC security team
7.	NBC internal Governances shall be followed prior to Go-Live
8.	Go-Live activities
9.	Pilot run



HIGH-LEVEL ARCHITECTURE:

Below is the high-level architecture of the engine, to show you involved systems and how will requests flow.


Upon successfully processing of the bill payment, biller/partner will be notified by the engine. As well, customer will be notified through SMS. Below is the sample SMS that will be sent to the customer from Bills Payments platform:


Partner/Biller may provide a receipt to customer, the template of all Bills Payments receipts that needs to be produced will be shared to the connecting partners where applicable.
 

HEADER PARAMETERS
Below are header parameters to be set by the client/downstream system
Header Parameter	Required	Sample Value
Content-Type	Yes	application/json
Accept	Yes	application/json
Authorization	Yes	Bearer TkJDX1VTRVJOQU1FOk5CQ19QQVNTV09SRAGSXHSHDSH==
Digital-Signature	Yes	VEhJUyBET0NVTUVOVCBJUyBQUkVQQVJFRCBCWSBEVVNU QU4gTUJBR0EgRlJPTSBJTk5PVkFUSU9OIEFORCBERVZFTE9Q TUVOVCBURUFNIEZST00gTkJDIEJBTksgVEFOWkFOSUEgKFB
BUlQgT0YgQUJTQSBHUk9VUCk=
Timestamp	No	2021-07-05T17:08:00.00

1.	INQUIRY API
The Inquiry API enables NBC channel/system to request for Bill Details from service providers (also known as Biller/partners). Engine will validate the request, upon success, will route the request to the biller, and return bills details.

HTTP Method	POST
Endpoint	/bills-payments-api/api/v1/inquiry
Request Payload	{
"channelId": "CBP1010101", "spCode": "BPE0001000BC",
"requestType": "inquiry",
"timestamp": "2023-03-07T12:29:50.968", "userId": "USER101",
"branchCode": "015",
"channelRef": "520DAN18311100298", "billRef": "PE0123456789",
"extraFields": {}
}
Success Response Payload	{
"statusCode": "600", "message": "Success", "channelId": "CBP1010101", "spCode": "PE0001000BC",
"requestType": "inquiry", "channelRef": "520DAN18311100298",
"timestamp": "2023-03-07T12:29:50.968",
"billDetails": {
"billRef": "PE0123456789",
"serviceName": "AABBCC", "description": "AABBCC Details", "billCreatedAt": "2023-03-10T10:45:20",
"totalAmount": "30000",
"balance": "25000",
"phoneNumber": "255715000000",
 
	"email": "Nyerere.Julias@example.com", "billedName": "Nyerere Julias", "currency": "TZS",
"paymentMode": "exact ", "expiryDate": "20230310T104520",
"creditAccount": "0122****1486", "creditCurrency": "TZS", "extraFields": {}
},
}
Failure Response Payload	{
"statusCode": 602,
"message": "Service Provider SP1001BP001 is is currently inactive", "spCode": "SP1001BP001",
"channelId": "CBP1010101", "requestType": "inquiry", "channelRef": "520DAN18311100298",
"timestamp": "2023-03-17T17:08:17.98601",
"data": {}
}


2.	PAYMENT API
The payment API enables channel(s) to confirm bills payment details and authorize payment of the bill. Hence, approves that Bills Payment Engine should proceed processing the request and sending request to CBS through middleware to debit a given amount from Customer’s account and be credited to the billers account. Once successfully notification should be sent to biller/partners in below format for bill confirmation where partner will issue a receipt on the response. Payment notification modality could be async or sync depending on partners preference.

HTTP Method	POST
Endpoint	/bills-payments-api/api/v1/payment
Request Payload	{
"channelId": "CBP1010101", "spCode": "BPE0001000BC",
"requestType": "payment", "approach": "async|sync",
"callbackUrl": "https://nbc.co.tz:443/channel-nbc/api/v1/callback-url", "timestamp": "2023-03-07T12:29:50.968",
"userId": "USER101",
"branchCode": "015", "billRef": "PE0123456789",
"channelRef": "520DAN183111002",
"amount": "25000", "creditAccount": "0122****1486", "creditCurrency": "TZS", "paymentType": "ACCOUNT ",
"channelCode": "APP ",
 

 


	"payerName": "Nyerere Julias", "payerPhone": "255715000000",
"payerEmail": "Nyerere.Julias@example.com", "narration": "Test Bills Payments", "extraFields": {}
}

This API support both Sync and Async. Between the two approaches, Async is the preferred one.


A.	ASYNC PAYMENT APPROACH
Partner/Biller will respond with success (acknowledging that the request has been successfully received and validated with a receipt number). Then partner will proceed with processing of the request, and then update NBC Bill payment API backend application by posting the response to the callback provided on the payload.

-	Initial acknowledgement response

Success Response Payload	{
"statusCode": "600",
"message": "Received and validated, engine is now processing your request", "channelId": "CBP1010101",
"spCode": "PE0001000BC",
"requestType": "payment", "channelRef": "520DAN183111002", "gatewayRef": "PE12371273189238721",
" billerReceipt ": "receipt123456", "timestamp": "2023-03-07T12:29:50.968",
"paymentDetails": null
}
Failure Response Payload	{
"statusCode": "601",
"message": "Error, (207) Transaction reference number already paid", "spCode": "BPE0001000BC",
"channelId": "CBP1010101", "requestType": "payment", "channelRef": "520DAN183111002",
"timestamp": "2023-03-20T09:56:29.684191",
"paymentDetails": null
}

-	Callback request to NBC Bill payments API backend system
NBC Backend will expose an API/Service that will be consuming the callbacks from Bills Payments API (partner).

HTTP Method	POST
Endpoint	NBC will be receiving partner callback on the payment request.
Request Payload	{
 
	"statusCode": "600", "message": "Success", "channelId": "CBP1010101", "spCode": "PE0001000BC",
"requestType": "payment", "channelRef": "520DAN183111002",
"timestamp": "2023-03-07T12:29:50.968",
"paymentDetails": {
"billRef": "PE0123456789", "gatewayRef": "PE12371273189238721",
"amount": "25000",
"currency": "TZS",
"transactionTime": "20230310T104520", "billerReceipt": "RCPT283432988", "remarks": "Successfully received", "extraFields": {}
}
}
Success Callback Response Payload	{
"statusCode": "600", "message": "Success", "billRef": "PE0123456789",
"channelRef": "520DAN183111002", "gatewayRef": "PE12371273189238721"
}
Failure Callback Response Payload	{
"statusCode": "601",
"message": "Unknow channel reference number”
}



B.	SYNC PAYMENT APPROACH
With this, NBC will need to block and wait for the actual processing response from Biller/Partner. This implementation is highly discouraged due below facts:
i.	Performance and Scalability: With synchronous, each operation must complete before the next operation can start, which can cause delays and slow down the application. Synchronous may also limit the scalability of the application. As the number of users and requests increase, the synchronous approach may become overwhelmed, leading to delays and timeouts. This can ultimately impact the user experience and the overall performance of the application.

ii.	User Experience: Banking applications are often accessed by users who expect a fast and responsive experience. With synchronous, users may experience delays and slow responses, leading to frustration and dissatisfaction. Asynchronous can provide a more responsive and seamless user experience, as it allows the application to continue processing other operations while waiting for long-running operations to complete.
 
Sync success / failure response payloads:

Success Response Payload	{
"statusCode": "600", "message": "Success", "channelId": "CBP1010101", "spCode": "PE0001000BC",
"requestType": "payment", "channelRef": "520DAN183111002",
"timestamp": "2023-03-07T12:29:50.968",
"paymentDetails": {
"billRef": "PE0123456789", "gatewayRef": "PE12371273189238721",
"amount": "25000",
"currency": "TZS",
"transactionTime": "20230310T104520", "billerReceipt": "RCPT283432988", "remarks": "Successfully received", "extraFields": {}
}
}
Failure Response Payload	{
"statusCode": "601",
"message": "Error, (207) Transaction reference number already paid", "spCode": "BPE0001000BC",
"channelId": "CBP1010101", "requestType": "payment", "channelRef": "520DAN183111002",
"timestamp": "2023-03-20T09:56:29.684191",
"paymentDetails": null
}


3.	STATUS CHECK
The Status Check API enables channel(s) to inquire status of the Bill Payment on the Biller.
Hence, Biller/Partner will respond with status indicating whether the transaction was done, and biller notification is successfully or failed.

HTTP Method	POST
Endpoint	/bills-payments-api/api/v1/status-check
Request Payload	{
"channelId": "CBP1010101", "spCode": "BPE0001000BC",
"requestType": "statusCheck", "timestamp": "2023-03-07T12:29:50.968", "channelRef": "520DAN183111002", "billRef": "PE0123456789",
"extraFields": {}
}
 
Success Response Payload	{
"statusCode": "600", "message": "Success", "channelId": "CBP1010101", "spCode": "PE0001000BC",
"requestType": "statusCheck", "channelRef": "520DAN183111002", "timestamp": "2023-03-07T12:29:50.968",
"paymentDetails": {
"billRef": "PE0123456789", "gatewayRef": "PE12371273189238721",
"amount": "25000",
"currency": "TZS",
"transactionTime": "20230310T104520", "billerReceipt": "RCPT283432988", "remarks": "Successfully received", "accountingStatus": "success", "billerNotified": "processed|InProgress", "extraFields": {}
}
}
Failure Response Payload	{
"statusCode": "603",
"message": "Error, unknown Channel ID", "spCode": "BPE0001000BC",
"channelId": "CBP1010101", "requestType": "statusCheck", "channelRef": "520DAN183111002",
"timestamp": "2023-03-20T09:56:29.684191",
"paymentDetails": null
}


4.	AUTHENTICATION API

HTTP Method	POST
Endpoint	/bills-payments-api/api/v1/auth
Request Payload	{
"username": "Biller/partner username", "password": " Biller/partner password"
}
Success Response Payload	{
"access_token": "jwt access token", "token_type ": "Bearer", "expires_in": "86400",
}
Failure Response Payload	{
"access_token": "",
 

 


	"token_type ": "",
"expires_in": "",
}







Fields Descriptions:

Field	Required	Description
channelId	Yes	A unique ID that identifies channel.
To be shared by Bills Payment Engine Admins
spCode	Yes	A unique ID that identifies biller (or service provider). To be retrieved through Biller Retrieval API.
requestType	Yes	A String that identifies type of the request, can be inquiry,
payments, statusCheck etc.
timestamp	Yes	Indicate date and time on which the channel posted a request to the Engine
userId	Yes	User ID of the channel user, can be Teller ID, Customer Unique
Identifier and/or Agent ID etc.
branchCode	Yes	Indicate the branch code where the user belongs to
billRef	Yes	This is the bill reference number that identifies specific bill of a certain biller (customer needs to have this before initiating a bills payment)

statusCode		Indicate whether the response is success of failure
message		Show engine messages in relation to the status code, CBS and and biller response
serviceName		This indicates what service does the biller offer to the customer
description		Description detailing the service offered to the customer by the service provider
billCreatedAt		Date on which the bill was created
totalAmount		Bill total amount
balance		Bill balance amount, can be useful to some biller who support Partial payments for their bills
currency		Currency of the amount (currently only TZS is supported)
phoneNumber		Billed customer’s phone number
email		Billed customer’s email address
billedName		Billed customer’s full name
paymentMode		Mode on which a customer can pay the bill:

Assume Julius Nyerere is billed 9000/= TZS.

-	Partial
May be paid in single or multiple installments, with the last instalment greater or equal to the remaining billed amount.
 
		JK is allowed to partially pay the bill; hence, he can then pay 500, then 4500 and finally 3500 (which in this case if you sum all instalments, total paid amount exceed the bill amount by 500).

-	Full
Shall be paid in one installment with the amount paid equal or greater than the billed amount.
JK can only pay once, hence is allowed to pay 9000/= or more.

-	Exact
Shall be paid in one installment with the amount paid being equal to the billed amount.

JK is allowed to only pay 9000/= nothing more, nothing less.

-	Limited
May be paid in single or multiple installments, with the last instalment equal to the remaining billed amount.

JK can pay 500, then 4500 and finally complete/pay the remaining 3000

-	Infinity
Shall be paid with any amount greater than zero, at infinity installments.
JK can pay 500, then 4500, then 500,000 etc.
expiryDate		The date on which the bill will expire, customer is not allowed to pay the bill beyond this date.
creditAccount		Masked biller/credit account, the account into which the bill
paid amount will be credited to
creditCurrency		Currency of the credit account
extraFields		This field allow the gateway to pass extra fields that are unique to bill / biller and that cannot be accommodated on the normal fields provided.

approach	Y	Approach on which the request is treated:
Possible values:

-	Async (preferred approach)
Channel send request to the engine, engine validate and acknowledge to the channel, session is ended right there. Then engine will proceed with other processes and update channel by posting response through the callbackUrl

-	Sync

 
		Channel send request to the engine, engine validate, and proceed with all processes, once done, respond to the channel with final response.
callbackUrl	Y	An API / service exposed by the channel backend system, that receive JSON request payload from the engine. Engine will use this to update on the status of the payload. The channel should check statusCode to along with other details to determine whether the bill has been processed successfully or not.
For the case of sync approach, value of this field should be empty string otherwise, needs to be a valid API endpoint.
amount	Y	Amount paid; hence this is the amount to be debited from customers account and credited to the biller
debitAccount	Y	Customer’s account (or rather the account to be debited)
debitCurrency	Y	Debit account currency
paymentType	Y	Type of payment, possible values are:

-	Account (Preferred option)
This indicate that the customer is paying the bill through his/her account.

-	Cash
Indicating that the customer is paying the bill by using cash/cheque etc.

This is applicable to Branch and Agency Banking systems.
channelCode	Y	Code that identifies channel

Possible values are:
-	IOS_APP
-	ANDROID_APP
-	USSD
-	IB (i.e., Retail Internet Banking)
-	OBDX (i.e., NBC Direct or Corporate Internet Banking)
-	CBP
-	DABP (i.e., Direct Agency Banking)
-	IABP (i.e., Indirect Agency Banking)
payerName	Y	This is the payer. i.e., the person who paid the bill. Not necessarily the billed customer
payerPhone	Y	Phone number of the payer
payerEmail	Y	Email address of the payer
narration	Y	Narration or remarks from the customer/channel
inquiryRawResponse	Y	Stringified inquiry raw response. i.e., stringify the corresponding inquiry response you received for the bill.

gatewayRef	Y	Unique reference generated by the engine
transactionTime	Y	Date and Time on which the transactions were processed
billerReceipt	N	Receipt number received from the biller (if any). Please note, some billers do not return these receipt numbers, in this case gatewayRef can be used as receipt number.

 
remarks	N	Remarks from the biller (if any)
accountingStatus		Status indicating that the accounting has been completed
successfully.
billerNotified		Indicate whether the biller has been notified or not. Possible values:
-	Completed:
Biller has been notified.
-	InProgress:
Notification to biller is in progress.


RESPONSE CODES
Describes possible response codes and their meaning

Code	Description
600	Success
601	Possible duplicate transaction
602	Validation Failed
603	Duplicate Transaction
604	No Response From Third Party
609	Authentication Fail
610	Client Not Registered
612	Requested Service In Unavailable
613	Unauthorized To Access Requested Service
615	Biller Does Not Exists
636	Biller Is Currently Disabled
699	Exception Caught
	
	

